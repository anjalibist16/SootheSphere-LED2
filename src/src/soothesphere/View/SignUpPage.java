/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package src.soothesphere.View;

import database.DatabaseConnection;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.Connection;
import DatabaseConnection.DatabaseConnection;
import java.sql.*;
import java.sql.SQLException;

/**
 *
 * @author User
 */
public class SignUpPage extends javax.swing.JFrame {

    /**
     * Creates new form SignUpPage
     */
    public SignUpPage() {
        initComponents();

    }
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        FullName = new javax.swing.JTextField();
        Email = new javax.swing.JTextField();
        Password1 = new javax.swing.JPasswordField();
        Confirm = new javax.swing.JPasswordField();
        jCheckBox1 = new javax.swing.JCheckBox();
        SignUp2Button = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        LogIn3Button = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Create account");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 144, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel2.setText("Username");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 76, 60, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel3.setText("Email");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 60, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel4.setText("Password");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 132, 60, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel5.setText("Confirm");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 60, -1));
        getContentPane().add(FullName, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 71, 193, -1));
        getContentPane().add(Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 99, 193, -1));
        getContentPane().add(Password1, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 127, 193, -1));

        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });
        getContentPane().add(Confirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 155, 193, -1));

        jCheckBox1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jCheckBox1.setText("I acccept all the terms & conditions");
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 195, -1, -1));

        SignUp2Button.setBackground(new java.awt.Color(153, 204, 255));
        SignUp2Button.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SignUp2Button.setForeground(new java.awt.Color(255, 255, 255));
        SignUp2Button.setText("Sign up");
        SignUp2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUp2ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(SignUp2Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 232, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel6.setText("Already have an account?");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(187, 271, -1, -1));

        LogIn3Button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LogIn3Button.setText("Login");
        LogIn3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogIn3ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(LogIn3Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(316, 268, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/SootheSphere (12).png"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

      
    private boolean isEmailValid(String email) {
        return email.matches("^[a-zA-Z0-9._%+-]+@gmail\\.com$");
    }

    // Method to check if the password contains at least one number and one uppercase letter
    private boolean isPasswordValid(String password) {
        boolean hasUpperCase = false;
        boolean hasDigit = false;
        
        for (char c : password.toCharArray()) {
            if (Character.isUpperCase(c)) {
                hasUpperCase = true;
            } else if (Character.isDigit(c)) {
                hasDigit = true;
            }
            if (hasUpperCase && hasDigit) {
                return true;
            }
        }
        return false;
    }

       // Method to check for duplicate username or email in the database
    private boolean isUserExist(String name, String email) {
        try (Connection conn = DatabaseConnection.getConnection()) {
            String query = "SELECT * FROM users WHERE username = ? OR email = ?";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setString(1, name);
            stmt.setString(2, email);
            ResultSet rs = stmt.executeQuery();
            return rs.next(); // Return true if any result is found
        } catch (SQLException e) {
            e.printStackTrace();
            return true; // Assume user exists if there's an error
        }
    }
    
    private void SignUp2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUp2ButtonActionPerformed
        // TODO add your handling code here:
        String name = FullName.getText().trim();
        String email = Email.getText().trim();
        String password = new String(Password1.getPassword());
        String confirm = new String(Confirm.getPassword());

        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Name is empty");
        } else if (email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Email is empty");
        } else if (!isEmailValid(email)) {
            JOptionPane.showMessageDialog(this, "Email must be a valid Gmail address");
        } else if (password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Password is empty");
        } else if (!isPasswordValid(password)) {
            JOptionPane.showMessageDialog(this, "Password must contain at least one number and one uppercase letter");
        } else if (confirm.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Confirm is empty");
        } else if (!password.equals(confirm)) {
            JOptionPane.showMessageDialog(this, "Password mismatch");
        } else if (!jCheckBox1.isSelected()) {
            JOptionPane.showMessageDialog(this, "You must accept the terms and conditions");
        } else if (isUserExist(name, email)) {
            JOptionPane.showMessageDialog(this, "Username or email already exists", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            if (registerUser(name, email, password)) {
                JOptionPane.showMessageDialog(this, "Registration Done", "Success", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                new LogInPage().setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Registration Failed", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_SignUp2ButtonActionPerformed
    private boolean registerUser(String name, String email, String password) {
        String sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";

        try (Connection connection = DatabaseConnection.getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
            preparedStatement.setString(1, name);
            preparedStatement.setString(2, email);
            preparedStatement.setString(3, password);

            int rowsAffected = preparedStatement.executeUpdate();
            return rowsAffected > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    private void LogIn3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogIn3ButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        LogInPage Lp= new LogInPage();
        Lp.setVisible(true);
    }//GEN-LAST:event_LogIn3ButtonActionPerformed

    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConfirmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUpPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUpPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUpPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUpPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUpPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField Confirm;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField FullName;
    private javax.swing.JButton LogIn3Button;
    private javax.swing.JPasswordField Password1;
    private javax.swing.JButton SignUp2Button;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
}
